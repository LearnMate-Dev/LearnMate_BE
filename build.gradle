plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.google.cloud.tools.jib' version '3.3.2'

}

group = 'LearnMate'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', "1.0.0-M2")
}

dependencies {
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'mysql:mysql-connector-java:8.0.33'

	implementation 'me.paulschwarz:spring-dotenv:2.5.4'

	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

	// jwt & json
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// gson
	implementation 'com.google.code.gson:gson'

	// json
	implementation 'org.json:json:20230227'

	// google natural language
	implementation 'com.google.cloud:google-cloud-language:2.53.0'

	// open-ai
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

jib {
	from {
		image = 'openjdk:21-jdk'
	}
	to {
		image = "${System.getenv('DOCKER_USERNAME')}/learnMate"
		tags = ['latest']
	}
	container {
		ports = ['8080']
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
