name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2

      - name: Java 버전 설정
        uses: actions/setup-java@v1
        with:
          java-version: '21'

      - name: Docker 로그인
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: JIB로 Docker 이미지 빌드 및 푸시
        run: ./gradlew jib --image=${{ secrets.DOCKER_USERNAME }}/learnmate:latest

      - name: EC2에 docker-compose.yml 업로드
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ec2-user
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "${EC2_SSH_KEY}" > ssh_key
          chmod 600 ssh_key
          scp -o StrictHostKeyChecking=no -i ssh_key docker-compose.yml $EC2_USER@$EC2_HOST:/home/$EC2_USER/

      - name: EC2 서버에서 docker-compose로 배포
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ec2-user
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh_key $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/$EC2_USER  # docker-compose.yml이 업로드된 경로로 이동
            docker-compose pull  # 최신 Docker 이미지를 가져옴
            docker-compose up -d  # 컨테이너를 백그라운드에서 실행
          EOF