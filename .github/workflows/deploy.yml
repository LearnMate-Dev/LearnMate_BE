name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2

      - name: Java 버전 설정
        uses: actions/setup-java@v1
        with:
          java-version: '21'

      - name: Docker 로그인
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: JIB로 Docker 이미지 빌드 및 푸시
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: ./gradlew jib --image=${{ secrets.DOCKER_USERNAME }}/learnmate:latest

      - name: EC2에 Docker 컨테이너 배포
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ec2-user
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: |
          echo "${EC2_SSH_KEY}" > ssh_key
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key $EC2_USER@$EC2_HOST << 'EOF'
            # 기존 컨테이너 중지 및 제거
            docker stop learnmate-app || true
            docker rm learnmate-app || true

            # 새 컨테이너 실행
            docker run -d \
              --name learnmate-app \
              -p 8080:8080 \
              -e DATABASE_URL=$DATABASE_URL \
              -e DATABASE_USERNAME=$DATABASE_USERNAME \
              -e DATABASE_PASSWORD=$DATABASE_PASSWORD \
              ${DOCKER_USERNAME}/learnmate:latest
          EOF